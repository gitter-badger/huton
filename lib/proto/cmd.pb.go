// Code generated by protoc-gen-go.
// source: cmd.proto
// DO NOT EDIT!

package huton_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Command struct {
	Type             *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Body             []byte  `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Command) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Command) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func init() {
	proto.RegisterType((*Command)(nil), "huton_proto.Command")
	proto.RegisterType((*Response)(nil), "huton_proto.Response")
}

func init() { proto.RegisterFile("cmd.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xce, 0x4d, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xce, 0x28, 0x2d, 0xc9, 0xcf, 0x8b, 0x07, 0x73, 0x94,
	0x54, 0xb9, 0xd8, 0x9d, 0xf3, 0x73, 0x73, 0x13, 0xf3, 0x52, 0x84, 0x78, 0xb8, 0x58, 0x4a, 0x2a,
	0x0b, 0x52, 0x25, 0x18, 0x15, 0x98, 0x34, 0x78, 0x41, 0xbc, 0xa4, 0xfc, 0x94, 0x4a, 0x09, 0x26,
	0x05, 0x26, 0x0d, 0x1e, 0x25, 0x2e, 0x2e, 0x8e, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54,
	0x23, 0x37, 0x10, 0x3b, 0x39, 0x33, 0xb5, 0x2c, 0xb5, 0x48, 0xc8, 0x8a, 0x8b, 0xd3, 0x3f, 0x0f,
	0x66, 0x80, 0x88, 0x1e, 0x92, 0xc9, 0x7a, 0x50, 0x51, 0x29, 0x51, 0x14, 0x51, 0x98, 0x29, 0x4a,
	0x0c, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x93, 0x16, 0xfd, 0x93, 0x00, 0x00, 0x00,
}
